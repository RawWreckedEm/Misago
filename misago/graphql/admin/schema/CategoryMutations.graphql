extend type Mutation {
    categoryCreate(input: CategoryCreateInput!): CategoryCreateMutationResult!
    categoryUpdate(category: ID!, input: CategoryUpdateInput!): CategoryMutationResult!
    categoryMove(category: ID!, parent: ID, before: ID): CategoryMoveMutationResult!
    categoryDelete(category: ID!, moveChildrenTo: ID, moveThreadsTo: ID): CategoryDeleteMutationResult!
}

input CategoryCreateInput {
    name: String!
    color: String
    icon: String
    parent: ID
    isClosed: Boolean
}

type CategoryCreateMutationResult {
    errors: [Error!]
    created: Boolean!
    category: Category
}

input CategoryUpdateInput {
    name: String
    color: String
    icon: String
    parent: ID
    isClosed: Boolean
}

type CategoryMutationResult {
    errors: [Error!]
    updated: Boolean!
    category: Category
}

type CategoryMoveMutationResult {
    errors: [Error!]
    category: Category
    categories: [Category!]!
}

type CategoryDeleteMutationResult {
    errors: [Error!]
    deleted: Boolean!
    categories: [Category!]!
}
