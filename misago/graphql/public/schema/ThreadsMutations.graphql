extend type Mutation {
    threadMove(thread: ID!, category: ID!): ThreadMutationResult!
    threadCreate(input: ThreadCreateInput!): ThreadMutationResult!
    threadDelete(input: ThreadDeleteInput!): ThreadDeleteMutationResult!
    threadIsClosedUpdate(input: ThreadIsClosedUpdateInput!): ThreadMutationResult!
    threadRename(thread: ID!, title: String!): ThreadMutationResult!
}

input ThreadCreateInput {
    category: ID!
    title: String!
    markup: String!
    isClosed: Boolean
}

input ThreadIsClosedUpdateInput {
    thread: ID!
    isClosed: Boolean!
}

type ThreadMutationResult {
    thread: Thread
    errors: [Error!]
}

input ThreadDeleteInput {
    thread: ID!
}

type ThreadDeleteMutationResult {
    deleted: [ID!]!
    errors: [Error!]
}

extend type Mutation {
    threadsIsClosedBulkUpdate(input: ThreadsIsClosedBulkUpdateInput!): ThreadsBulkMutationResult!
    threadsBulkDelete(threads: [ID!]!): ThreadsBulkDeleteMutationResult!
    threadsBulkMove(threads: [ID!]!, category: ID!): ThreadsBulkMutationResult!
}

input ThreadsIsClosedBulkUpdateInput {
    threads: [ID!]!
    isClosed: Boolean!
}

type ThreadsBulkMutationResult {
    updated: Boolean!
    threads: [Thread!]
    errors: [Error!]
}

type ThreadsBulkDeleteMutationResult {
    deleted: [ID!]!
    errors: [Error!]
}
