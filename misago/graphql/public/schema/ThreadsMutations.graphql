extend type Mutation {
    threadCategoryUpdate(input: ThreadCategoryUpdateInput!): ThreadMutationResult!
    threadCreate(input: ThreadCreateInput!): ThreadMutationResult!
    threadIsClosedUpdate(input: ThreadIsClosedUpdateInput!): ThreadMutationResult!
    threadTitleUpdate(input: ThreadTitleUpdateInput!): ThreadMutationResult!
    threadDelete(input: ThreadDeleteInput!): ThreadDeleteMutationResult!
}

input ThreadCreateInput {
    category: ID!
    title: String!
    markup: String!
    isClosed: Boolean
}

input ThreadCategoryUpdateInput {
    thread: ID!
    category: ID!
}

input ThreadIsClosedUpdateInput {
    thread: ID!
    isClosed: Boolean!
}

input ThreadTitleUpdateInput {
    thread: ID!
    title: String!
}

type ThreadMutationResult {
    thread: Thread
    errors: [Error!]
}

input ThreadDeleteInput {
    thread: ID!
}

type ThreadDeleteMutationResult {
    deleted: [ID!]!
    errors: [Error!]
}

extend type Mutation {
    threadsIsClosedBulkUpdate(input: ThreadsIsClosedBulkUpdateInput!): ThreadsBulkMutationResult!
    threadsBulkMove(threads: [ID!]!, category: ID!): ThreadsBulkMutationResult!
    deleteThreads(input: BulkDeleteThreadsInput!): BulkDeleteThreadsMutationResult!
}

input ThreadsIsClosedBulkUpdateInput {
    threads: [ID!]!
    isClosed: Boolean!
}

type ThreadsBulkMutationResult {
    updated: Boolean!
    threads: [Thread!]
    errors: [Error!]
}

input BulkDeleteThreadsInput {
    threads: [ID!]!
}

type BulkDeleteThreadsMutationResult {
    deleted: [ID!]!
    errors: [Error!]
}
